<!DOCTYPE html>
<html>
<head>
	<title>4-18</title>
	<style>
		canvas {border: 1px solid #d3d3d3;
				background-color: #f1f1f1;}
		#buttons {width: 480px;
					text-align: center;}
		button {width: 60px;}
	</style>
</head>
<body onload = "startGame()">
<script>
var gameArea = {
	canvas: document.createElement("canvas"),
	start: function() {
	this.canvas.width = 480;
	this.canvas.height = 270;
	this.context = this.canvas.getContext("2d");
	document.body.insertBefore(this.canvas, document.body.childNodes[0]);
	this.interval = setInterval(updateGameArea, 20);
	this.frameNo = 0;
	},
	clear: function() {
		this.context.clearRect(0,0,this.canvas.width,this.canvas.height);
	},
	stop: function() {
		clearInterval(this.interval);
	}
}

var car;
var bushes = [];

function startGame(){
	gameArea.start();
	car = new component(30,30,"../Images/car-right.png",10,120,"image");
	score = new component("30px", "Consolas", "red", 280, 40, "text");
}

function component(width,height,color,x,y,type){
	this.width = width;
	this.height = height;
	this.x = x;
	this.y = y;
	this.type = type;
	this.speedX = 0;
	this.speedY = 0;

	if(this.type == "image") {
		this.image = new Image();
		this.image.src = color;
	}
	
	this.newPos = function() {
		this.x += this.speedX;
		this.y += this.speedY;
	}
	
	this.update = function() {
		ctx = gameArea.context;
		ctx.fillStyle = color;
		if (this.type == "text") {
			ctx.font = this.width + " " + this.height;
			ctx.fillText(this.text, this.x, this.y);
		}
		else if (this.type == "image") {
			ctx.drawImage(this.image,this.x,this.y,this.width,this.height);
		} else {
			ctx.fillRect(this.image,this.x,this.y,this.width,this.height);
		}
	}
	
	this.crashWith = function(obj) {
		var carleft = this.x;
		var carright = this.x + this.width;
		var cartop = this.y;
		var carbottom = this.y + this.height;

		var objleft = obj.x;
		var objright = obj.x + obj.width;
		var objtop = obj.y;
		var objbottom = obj.y + obj.height;
		
		var crash = true;
		if ((carbottom < objtop) || (cartop > objbottom) || (carleft > objright) || (carright < objleft)) {
			crash = false;
		}
		return crash;
	}
}

function updateGameArea() {
	for(i = 0; i < bushes.length; i++) {
		if (car.crashWith(bushes[i])){
			gameArea.stop();
			var ok = confirm("Let's play again!");
			if (ok) {
				car.x = 10;
				car.y = 120;
				car.speedX = 0;
				car.speedY = 0;
				gameArea.frameNo = 0;
				gameArea.interval = setInterval(updateGameArea, 20);
				bushes = [];
			}
			else {
				return;
			}
		} 
	}
	gameArea.clear();
	gameArea.frameNo += 1;
	var w = gameArea.canvas.width;
	if (gameArea.frameNo == 1 || everyInterval(150)){
		minHeight = 20;
		maxHeight = 200;
		height = Math.floor(Math.random()*(maxHeight-minHeight+1)+minHeight);
		minGap = 50;
		maxGap = 200;
		gap = Math.floor(Math.random()*(maxGap-minGap+1)+minGap);
		bushes.push(new component(20,height,"../Images/bush.jpg",w,0,"image"));
		bushes.push(new component(20,w-height-gap,"../Images/bush.jpg",w,height+gap,"image"));
	}
	
	for(i = 0; i < bushes.length; i++) {
		bushes[i].x -= 1;
		bushes[i].update();
	}
	car.newPos();
	car.update();
	score.text = "SCORE: " + Math.floor(gameArea.frameNo/10);
}

function everyInterval(n){
	if ((gameArea.frameNo % n) ==0)
		return true;
	return false;
}

function moveUp() {
	car.speedY -= 2;
}

function moveLeft() {
	car.speedX -= 2;
	if (car.speedX < 0) {
		car.image.src = "../Images/car-left.png";
	}
}

function moveRight() {
	car.speedX += 2;
	if (car.speedX > 0) {
		car.image.src = "../Images/car-right.png";
	}
}

function moveDown() {
	car.speedY += 2;
}

function clearMove() {
	car.speedX = 0;
	car.speedY = 0;
}

</script>

<div id = "buttons">
	<button onmousedown = "moveUp()" onmouseup = "clearMove()">Up </button><br><br>
	<button onmousedown = "moveLeft()" onmouseup = "clearMove()">Left </button>
	<button onmousedown = "moveRight()" onmouseup = "clearMove()">Right</button><br><br>
	<button onmousedown = "moveDown()" onmouseup = "clearMove()">Down</button>
</div>
</body>
</html>